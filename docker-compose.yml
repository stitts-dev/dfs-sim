version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dfs_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dfs_optimizer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dfs_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dfs_backend
    environment:
      PORT: 8080
      ENV: development
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/dfs_optimizer?sslmode=disable
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: dev-secret-key
      CORS_ORIGINS: http://localhost:5173,http://127.0.0.1:5173
      BALLDONTLIE_API_KEY: ${BALLDONTLIE_API_KEY:-demo-key}
      THESPORTSDB_API_KEY: ${THESPORTSDB_API_KEY:-123}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://localhost:8080/api/v1
    container_name: dfs_frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: